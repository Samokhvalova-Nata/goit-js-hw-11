{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAOA,MAAMC,EAAO,CACTC,OAAQC,SAASC,cAAc,gBAC/BC,UAAWF,SAASC,cAAc,YAClCE,SAAUH,SAASC,cAAc,cAErC,IAAIG,EAAU,KACd,MAAMC,EAAa,IAAI,EAAAT,EAAAU,YACvBR,EAAKC,OAAOQ,iBAAiB,UAG7BC,eAAsCC,GAQlC,GAPAA,EAAIC,iBAgER,WACIZ,EAAKI,UAAUS,UAAY,E,CAhE3BC,GACAC,EAASC,UAAUhB,EAAKK,UAExBE,EAAWU,MAAQN,EAAIO,OAAOC,SAASC,YAAYC,MAAMC,OACzDf,EAAWgB,YAEc,KAArBhB,EAAWU,MAEX,YADAO,EAAAC,OAAOC,QAAQ,0CAInB,IACI,MAAMC,KAAEA,SAAepB,EAAWqB,cAClC,GAAyB,IAArBD,EAAKE,KAAKC,OAGV,OAFAN,EAAAC,OAAOC,QAAQ,iFACf1B,EAAKC,OAAO8B,QAGhBP,EAAAC,OAAOO,QAAQ,oBAAoBL,EAAKM,qBAExCjC,EAAKI,UAAUS,WAAY,EAAAqB,EAAAC,SAAmBR,EAAKE,MACnDtB,EAAW6B,gBAEPC,KAAKC,KAAKX,EAAKM,UAAY1B,EAAWgC,SAAWhC,EAAWiC,MAC5DzB,EAAS0B,QAAQzC,EAAKK,UAG1BC,EAAU,IAAIoC,EAAAC,GAAJ,CAAmB,cAAe,CACpCC,aAAc,IACdC,YAAY,G,CAEtB,MAAOC,GACLC,QAAQC,IAAIF,E,KAIhB,MAqBE/B,EAAW,IAAIkC,sBArBDvC,MAAOwC,IACvB,IAAK,MAAMC,KAASD,EAChB,GAAIC,EAAMC,gBAAuC,KAArB7C,EAAWU,MAEnC,IACI,MAAMU,KAAEA,SAAepB,EAAWqB,cAClC5B,EAAKI,UAAUiD,mBAAmB,aAAa,EAAAnB,EAAAC,SAAmBR,EAAKE,OACvEtB,EAAW6B,gBAEX9B,EAAQgD,UACRC,G,CACF,MAAOT,GACLC,QAAQC,IAAIF,E,IAMZ,CACZU,WAAY,UAYhB,SAASD,IACL,MAAQE,OAAQC,GAAexD,SAASC,cAAc,YAAYwD,kBAAkBC,wBAEpFC,OAAOC,SAAS,CACZC,IAAkB,EAAbL,EACLM,SAAU,U","sources":["src/js/infinityScroll.js"],"sourcesContent":["import { PixabayAPI } from './pixabay-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport createGalleryCards from '../templates/gallery-card.hbs';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst refs = {\n    formEl: document.querySelector('.search-form'),\n    galleryEl: document.querySelector('.gallery'),\n    sentinel: document.querySelector('#sentinel'),\n}\nlet gallery = null;\nconst pixabayAPI = new PixabayAPI();\nrefs.formEl.addEventListener('submit', handleSearchFormSubmit);\n\n\nasync function handleSearchFormSubmit(evt) {\n    evt.preventDefault();\n    clearMarkup();\n    observer.unobserve(refs.sentinel);\n\n    pixabayAPI.query = evt.target.elements.searchQuery.value.trim();\n    pixabayAPI.resetPage();\n\n    if (pixabayAPI.query === '') {\n        Notify.failure(\"Sorry, enter something in search line.\");\n        return;\n    };\n\n    try {\n        const { data } = await pixabayAPI.fetchPhotos();\n        if (data.hits.length === 0) {\n            Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n            refs.formEl.reset();\n            return;\n        }\n        Notify.success(`Hooray! We found ${data.totalHits} images.`);\n\n        refs.galleryEl.innerHTML = createGalleryCards(data.hits);\n        pixabayAPI.incrementPage();\n\n        if (Math.ceil(data.totalHits / pixabayAPI.count) !== pixabayAPI.page) {\n            observer.observe(refs.sentinel);\n        }\n\n        gallery = new SimpleLightbox('.gallery  a', {\n                captionDelay: 250,\n                scrollZoom: false,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\n    const onEntry = async (entries) => {\n    for (const entry of entries) {\n        if (entry.isIntersecting && pixabayAPI.query !== '') {\n\n            try {\n                const { data } = await pixabayAPI.fetchPhotos();\n                refs.galleryEl.insertAdjacentHTML('beforeend', createGalleryCards(data.hits));\n                pixabayAPI.incrementPage();\n\n                gallery.refresh();\n                smoothScroll();\n            } catch (err) {\n                console.log(err);\n            }\n        }\n    };\n};\n\nconst options = {\n    rootMargin: '150px',\n};\nconst observer = new IntersectionObserver(onEntry, options);\n\n\n\n\n\nfunction clearMarkup() {\n    refs.galleryEl.innerHTML = '';\n};\n\nfunction smoothScroll() {\n    const { height: cardHeight } = document.querySelector(\".gallery\").firstElementChild.getBoundingClientRect();\n\n    window.scrollBy({\n        top: cardHeight * 2,\n        behavior: \"smooth\",\n    });\n};\n\n\n\n"],"names":["$6fOXY","parcelRequire","$2ce415f148c0c897$var$refs","formEl","document","querySelector","galleryEl","sentinel","$2ce415f148c0c897$var$gallery","$2ce415f148c0c897$var$pixabayAPI","PixabayAPI","addEventListener","async","evt","preventDefault","innerHTML","$2ce415f148c0c897$var$clearMarkup","$2ce415f148c0c897$var$observer","unobserve","query","target","elements","searchQuery","value","trim","resetPage","$iQIUW","Notify","failure","data","fetchPhotos","hits","length","reset","success","totalHits","$cdIRi","default","incrementPage","Math","ceil","count","page","observe","$parcel$interopDefault","$fZKcF","captionDelay","scrollZoom","err","console","log","IntersectionObserver","entries","entry","isIntersecting","insertAdjacentHTML","refresh","$2ce415f148c0c897$var$smoothScroll","rootMargin","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior"],"version":3,"file":"infinity scroll.db1c659a.js.map"}